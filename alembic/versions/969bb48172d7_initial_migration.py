"""Initial migration

Revision ID: 969bb48172d7
Revises: 
Create Date: 2024-11-13 16:23:12.451390

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "969bb48172d7"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "model_dataset",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("model_id", sa.Integer(), nullable=False),
        sa.Column("dataset_id", sa.Integer(), nullable=False),
        sa.Column("linked_time", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["dataset_id"], ["dataset_info.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["model_id"], ["model_info.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "model_upload",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("model_id", sa.Integer(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("register_date", sa.DateTime(), nullable=False),
        sa.Column("file_name", sa.String(), nullable=True),
        sa.Column("file_path", sa.String(), nullable=True),
        sa.Column("file_type", sa.Integer(), nullable=True),
        sa.Column("file_description", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["model_id"],
            ["model_info.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "user_id",
            "file_name",
            "model_id",
            name="unique_filename_per_user_per_model",
        ),
    )
    op.create_table(
        "run_details",
        sa.Column("uuid", sa.String(length=255), nullable=False),
        sa.Column("display_name", sa.String(length=255), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.String(length=255), nullable=True),
        sa.Column("experiment_uuid", sa.String(length=255), nullable=False),
        sa.Column("pipeline_uuid", sa.String(length=255), nullable=False),
        sa.Column("createdAt_in_sec", sa.DateTime(), nullable=False),
        sa.Column("scheduledAt_in_sec", sa.DateTime(), nullable=True),
        sa.Column("finishedAt_in_sec", sa.DateTime(), nullable=True),
        sa.Column("state", sa.String(length=255), nullable=True),
        sa.ForeignKeyConstraint(
            ["experiment_uuid"],
            ["experiments.uuid"],
        ),
        sa.PrimaryKeyConstraint("uuid"),
    )
    op.create_table(
        "validation_artifact",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("model_id", sa.Integer(), nullable=True),
        sa.Column("dataset_id", sa.Integer(), nullable=True),
        sa.Column("validation_artifacts", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["dataset_id"],
            ["dataset_info.id"],
        ),
        sa.ForeignKeyConstraint(
            ["model_id"],
            ["model_info.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "model_id", "dataset_id", name="unique_model_id_dataset_id"
        ),
    )
    op.create_table(
        "validation_metric",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("model_id", sa.Integer(), nullable=True),
        sa.Column("dataset_id", sa.Integer(), nullable=True),
        sa.Column("registered_date_time", sa.DateTime(), nullable=False),
        sa.Column("accuracy_score", sa.Float(), nullable=True),
        sa.Column("example_count", sa.Integer(), nullable=True),
        sa.Column("f1_score", sa.Float(), nullable=True),
        sa.Column("log_loss", sa.Float(), nullable=True),
        sa.Column("precision_score", sa.Float(), nullable=True),
        sa.Column("recall_score", sa.Float(), nullable=True),
        sa.Column("roc_auc", sa.Integer(), nullable=True),
        sa.Column("score", sa.Float(), nullable=True),
        sa.Column("cpu_consumption", sa.Float(), nullable=True),
        sa.Column("memory_utilization", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(
            ["dataset_id"],
            ["dataset_info.id"],
        ),
        sa.ForeignKeyConstraint(
            ["model_id"],
            ["model_info.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "model_id", "dataset_id", name="unique_model_id_dataset_id_per_metric"
        ),
    )
    op.create_table(
        "tasks",
        sa.Column("uuid", sa.String(length=255), nullable=False),
        sa.Column("runuuid", sa.String(length=255), nullable=False),
        sa.Column("createdtimestamp", sa.DateTime(), nullable=False),
        sa.Column("startedtimestamp", sa.DateTime(), nullable=False),
        sa.Column("finishedtimestamp", sa.DateTime(), nullable=False),
        sa.Column("state", sa.String(length=255), nullable=True),
        sa.Column("name", sa.String(length=255), nullable=True),
        sa.Column("parenttaskuuid", sa.String(length=255), nullable=True),
        sa.ForeignKeyConstraint(
            ["runuuid"],
            ["run_details.uuid"],
        ),
        sa.PrimaryKeyConstraint("uuid"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("tasks")
    op.drop_table("validation_metric")
    op.drop_table("validation_artifact")
    op.drop_table("run_details")
    op.drop_table("model_upload")
    op.drop_table("model_dataset")
    # ### end Alembic commands ###
